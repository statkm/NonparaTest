xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*2,
k2/lambda2+sqrt(k2/(lambda2^2))*2)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
N<-100000
dfx <- rgamma(N, shape=k1, scale = theta1)
N<-100000
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
mean(dfx<dfy)
(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2) #std.ratio
data.frame(value=df_pval, test="WMW")
dat_results <-rbind(
data.frame(value=df_pval, test="WMW"),
data.frame(value=df_pval2, test="BM")
)
dat_results %>%
ggplot(aes(color=test))+
geom_histogram(value)
dat_results %>%
ggplot(aes(color=test))+
geom_histogram(x=value)
dat_results %>%
ggplot(aes(color=test))+
geom_histogram(aes(x=value))
dat_results %>%
ggplot(aes(x=value, fill=test))+
geom_histogram(alpha=0.4)
dat_results %>%
ggplot(aes(x=value, fill=test))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
ggplot(aes(x=value, fill=test, y = ..density..))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
group_by(test) %>%
summary(Nsim=n(), pval=mean(value), prob=mean(value<0.05))
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), prob=mean(value<0.05))
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05))
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05), hoge=1)
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05), std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2))
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
meandiff=k1/lambda1-k2/lambda2,
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2))
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
mean.diff=k1/lambda1-k2/lambda2,
mean.ratio=k1/lambda1/(k2/lambda2),
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2),
skw.ratio=2/sqrt(k1)/(2/sqrt(k2))
)
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
mean.diff=k1/lambda1-k2/lambda2,
mean.ratio=k1/lambda1/(k2/lambda2),
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2),
skw.ratio=2/sqrt(k1)/(2/sqrt(k2)),
kur.ratio=6/k1/(6/k2)
)
k1<- 10; k2 <- 10;
results<-func_Erlang_WMW(k1=k1, k2=k2)
lambda1 <- 1-results$r_root;
lambda2 <- results$r_root;
Nsim <- 100000
df_pval <-c(); df_pval2 <-c();
df_est <-c()
pb <- txtProgressBar(min = 1, max = Nsim, style = 3)
N<-1000
for(i in 1:Nsim){
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
#dfx <- rgamma(N, shape=k1, scale = theta1)
#dfy <- rgamma(N, shape=k2, scale = theta2)
#dfx <- rnorm(N, mean=-0.32, sd=0.55)
#dfy <- rnorm(N, mean=-0.05, sd=0.55)
#df_est <- c(df_est, pairwiseCI() )
df_pval2 <- c(df_pval2, brunner.munzel.test(x=dfx, y=dfy)$p.value)
df_pval <- c(df_pval, wilcox.test(x=dfx, y=dfy)$p.value)
setTxtProgressBar(pb, i)
}
dat_results <-rbind(
data.frame(value=df_pval, test="WMW"),
data.frame(value=df_pval2, test="BM")
)
dat_results %>%
ggplot(aes(x=value, fill=test, y = ..density..))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
mean.diff=k1/lambda1-k2/lambda2,
mean.ratio=k1/lambda1/(k2/lambda2),
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2),
skw.ratio=2/sqrt(k1)/(2/sqrt(k2)),
kur.ratio=6/k1/(6/k2)
)
N<-100000
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
mean(dfx<dfy)
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*2,
k2/lambda2+sqrt(k2/(lambda2^2))*2)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
cat("k: " k1, k2, "\n",
cat("k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2)
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2)
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
k1=k1, k2=k2, lambda1=lambda1, lambda2=lambda2,
mean.diff=k1/lambda1-k2/lambda2,
mean.ratio=k1/lambda1/(k2/lambda2),
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2),
skw.ratio=2/sqrt(k1)/(2/sqrt(k2)),
kur.ratio=6/k1/(6/k2)
)
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
k1=k1, k2=k2, l1=lambda1, l2=lambda2,
mean.diff=k1/lambda1-k2/lambda2,
mean.ratio=k1/lambda1/(k2/lambda2),
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2),
skw.ratio=2/sqrt(k1)/(2/sqrt(k2)),
kur.ratio=6/k1/(6/k2)
)
# solving
k1<- 3; k2 <- 3;
K<-k1+k2
coef_ <- numeric(K)
coef_k1 <- choose(k1, 0:k1)*((-1)^(0:k1))/gamma(k1)
coef_k1
n<-0
for(n in 0:(k2-1))
coef_[(n+1):(n+1+length(coef_k1)-1)] <-
coef_[(n+1):(n+1+length(coef_k1)-1)]+gamma(k1+n)/gamma(n+1)*coef_k1
coef_[1]<-coef_[1]-0.5
coef_
roots<-polyroot(coef_)
roots
root<-roots[(abs(Im(roots)) < 10^-6) & (Re(roots)>0)]
length(root)
Re(root)
root<-roots[(abs(Im(roots)) < 10^-6) & (Re(roots)>0)& (Re(roots)<1)]
length(root)
Re(root)
k1<- 5; k2 <- 5;
K<-k1+k2
coef_ <- numeric(K)
coef_k1 <- choose(k1, 0:k1)*((-1)^(0:k1))/gamma(k1)
coef_k1
n<-0
for(n in 0:(k2-1))
coef_[(n+1):(n+1+length(coef_k1)-1)] <-
coef_[(n+1):(n+1+length(coef_k1)-1)]+gamma(k1+n)/gamma(n+1)*coef_k1
coef_[1]<-coef_[1]-0.5
coef_
roots<-polyroot(coef_)
roots
root<-roots[(abs(Im(roots)) < 10^-6) & (Re(roots)>0)& (Re(roots)<1)]
length(root)
Re(root)
k1<- 10; k2 <- 1;
results<-func_Erlang_WMW(k1=k1, k2=k2)
lambda1 <- 1-results$r_root;
lambda2 <- results$r_root;
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2)
Nsim <- 100000
df_pval <-c(); df_pval2 <-c();
df_est <-c()
pb <- txtProgressBar(min = 1, max = Nsim, style = 3)
N<-1000
for(i in 1:Nsim){
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
#dfx <- rgamma(N, shape=k1, scale = theta1)
#dfy <- rgamma(N, shape=k2, scale = theta2)
#dfx <- rnorm(N, mean=-0.32, sd=0.55)
#dfy <- rnorm(N, mean=-0.05, sd=0.55)
#df_est <- c(df_est, pairwiseCI() )
df_pval2 <- c(df_pval2, brunner.munzel.test(x=dfx, y=dfy)$p.value)
df_pval <- c(df_pval, wilcox.test(x=dfx, y=dfy)$p.value)
setTxtProgressBar(pb, i)
}
dat_results <-rbind(
data.frame(value=df_pval, test="WMW"),
data.frame(value=df_pval2, test="BM")
)
dat_results %>%
ggplot(aes(x=value, fill=test, y = ..density..))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
k1=k1, k2=k2, l1=lambda1, l2=lambda2,
mean.diff=k1/lambda1-k2/lambda2,
mean.ratio=k1/lambda1/(k2/lambda2),
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2),
skw.ratio=2/sqrt(k1)/(2/sqrt(k2)),
kur.ratio=6/k1/(6/k2)
)
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*2,
k2/lambda2+sqrt(k2/(lambda2^2))*2)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
N<-100000
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
mean(dfx<dfy)
k1<- 4; k2 <- 10;
results<-func_Erlang_WMW(k1=k1, k2=k2)
lambda1 <- 1-results$r_root;
lambda2 <- results$r_root;
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2)
Nsim <- 100000
df_pval <-c(); df_pval2 <-c();
df_est <-c()
pb <- txtProgressBar(min = 1, max = Nsim, style = 3)
N<-1000
for(i in 1:Nsim){
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
#dfx <- rgamma(N, shape=k1, scale = theta1)
#dfy <- rgamma(N, shape=k2, scale = theta2)
#dfx <- rnorm(N, mean=-0.32, sd=0.55)
#dfy <- rnorm(N, mean=-0.05, sd=0.55)
#df_est <- c(df_est, pairwiseCI() )
df_pval2 <- c(df_pval2, brunner.munzel.test(x=dfx, y=dfy)$p.value)
df_pval <- c(df_pval, wilcox.test(x=dfx, y=dfy)$p.value)
setTxtProgressBar(pb, i)
}
dat_results <-rbind(
data.frame(value=df_pval, test="WMW"),
data.frame(value=df_pval2, test="BM")
)
dat_results %>%
ggplot(aes(x=value, fill=test, y = ..density..))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05),
k1=k1, k2=k2, l1=lambda1, l2=lambda2,
mean.diff=k1/lambda1-k2/lambda2,
mean.ratio=k1/lambda1/(k2/lambda2),
std.ratio=(sqrt(k1)/lambda1)/(sqrt(k2)/lambda2),
skw.ratio=2/sqrt(k1)/(2/sqrt(k2)),
kur.ratio=6/k1/(6/k2)
)
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*2,
k2/lambda2+sqrt(k2/(lambda2^2))*2)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
N<-100000
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
mean(dfx<dfy)
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2, "\n",
"mean: ", k1/lambda1, k2/lambda2, k1/lambda1/(k2/lambda2), "\n",
"std: ", (sqrt(k1)/lambda1), (sqrt(k2)/lambda2), (sqrt(k1)/lambda1)/(sqrt(k2)/lambda2), "\n",
"skw: ", 2/sqrt(k1), 2/sqrt(k2), 2/sqrt(k1)/(2/sqrt(k2)), "\n",
"kur: ", 6/k1, (6/k2), 6/k1/(6/k2), "\n",
"\n")
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2, "\n",
"mean: ", k1/lambda1, k2/lambda2, ", ratio:", k1/lambda1/(k2/lambda2), "\n",
"std: ", (sqrt(k1)/lambda1), (sqrt(k2)/lambda2), ", ratio:", (sqrt(k1)/lambda1)/(sqrt(k2)/lambda2), "\n",
"skw: ", 2/sqrt(k1), 2/sqrt(k2), ", ratio:", 2/sqrt(k1)/(2/sqrt(k2)), "\n",
"kur: ", 6/k1, (6/k2), ", ratio:", 6/k1/(6/k2), "\n",
"\n")
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2, "\n", "\n",
"mean: ", k1/lambda1, k2/lambda2, ", ratio:", k1/lambda1/(k2/lambda2), "\n",
"std: ", (sqrt(k1)/lambda1), (sqrt(k2)/lambda2), ", ratio:", (sqrt(k1)/lambda1)/(sqrt(k2)/lambda2), "\n",
"skw: ", 2/sqrt(k1), 2/sqrt(k2), ", ratio:", 2/sqrt(k1)/(2/sqrt(k2)), "\n",
"kur: ", 6/k1, (6/k2), ", ratio:", 6/k1/(6/k2), "\n",
"\n")
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*2,
k2/lambda2+sqrt(k2/(lambda2^2))*2)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
xmax
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*3,
k2/lambda2+sqrt(k2/(lambda2^2))*3)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
k1<- 4; k2 <- 10;
results<-func_Erlang_WMW(k1=k1, k2=k2)
lambda1 <- 1-results$r_root;
lambda2 <- results$r_root;
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*3,
k2/lambda2+sqrt(k2/(lambda2^2))*3)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2, "\n", "\n",
"mean: ", k1/lambda1, k2/lambda2, ", ratio:", k1/lambda1/(k2/lambda2), "\n",
"std: ", (sqrt(k1)/lambda1), (sqrt(k2)/lambda2), ", ratio:", (sqrt(k1)/lambda1)/(sqrt(k2)/lambda2), "\n",
"skw: ", 2/sqrt(k1), 2/sqrt(k2), ", ratio:", 2/sqrt(k1)/(2/sqrt(k2)), "\n",
"kur: ", 6/k1, (6/k2), ", ratio:", 6/k1/(6/k2), "\n",
"\n")
k1<- 2; k2 <- 10;
results<-func_Erlang_WMW(k1=k1, k2=k2)
lambda1 <- 1-results$r_root;
lambda2 <- results$r_root;
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*3,
k2/lambda2+sqrt(k2/(lambda2^2))*3)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2, "\n", "\n",
"mean: ", k1/lambda1, k2/lambda2, ", ratio:", k1/lambda1/(k2/lambda2), "\n",
"std: ", (sqrt(k1)/lambda1), (sqrt(k2)/lambda2), ", ratio:", (sqrt(k1)/lambda1)/(sqrt(k2)/lambda2), "\n",
"skw: ", 2/sqrt(k1), 2/sqrt(k2), ", ratio:", 2/sqrt(k1)/(2/sqrt(k2)), "\n",
"kur: ", 6/k1, (6/k2), ", ratio:", 6/k1/(6/k2), "\n",
"\n")
Nsim <- 100000
df_pval <-c(); df_pval2 <-c();
df_est <-c()
pb <- txtProgressBar(min = 1, max = Nsim, style = 3)
N<-1000
for(i in 1:Nsim){
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
#dfx <- rgamma(N, shape=k1, scale = theta1)
#dfy <- rgamma(N, shape=k2, scale = theta2)
#dfx <- rnorm(N, mean=-0.32, sd=0.55)
#dfy <- rnorm(N, mean=-0.05, sd=0.55)
#df_est <- c(df_est, pairwiseCI() )
df_pval2 <- c(df_pval2, brunner.munzel.test(x=dfx, y=dfy)$p.value)
df_pval <- c(df_pval, wilcox.test(x=dfx, y=dfy)$p.value)
setTxtProgressBar(pb, i)
}
dat_results <-rbind(
data.frame(value=df_pval, test="WMW"),
data.frame(value=df_pval2, test="BM")
)
dat_results %>%
ggplot(aes(x=value, fill=test, y = ..density..))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05)
)
N<-100000
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
mean(dfx<dfy)
k1<- 10; k2 <- 50;
results<-func_Erlang_WMW(k1=k1, k2=k2)
k1<- 10; k2 <- 50;
K<-k1+k2
coef_ <- numeric(K)
coef_k1 <- choose(k1, 0:k1)*((-1)^(0:k1))/gamma(k1)
coef_k1
n<-0
for(n in 0:(k2-1))
coef_[(n+1):(n+1+length(coef_k1)-1)] <-
coef_[(n+1):(n+1+length(coef_k1)-1)]+gamma(k1+n)/gamma(n+1)*coef_k1
coef_[1]<-coef_[1]-0.5
coef_
roots<-polyroot(coef_)
roots
root<-roots[(abs(Im(roots)) < 10^-6) & (Re(roots)>0)& (Re(roots)<1)]
length(root)
roots
k1<- 10; k2 <- 20;
K<-k1+k2
coef_ <- numeric(K)
coef_k1 <- choose(k1, 0:k1)*((-1)^(0:k1))/gamma(k1)
coef_k1
n<-0
for(n in 0:(k2-1))
coef_[(n+1):(n+1+length(coef_k1)-1)] <-
coef_[(n+1):(n+1+length(coef_k1)-1)]+gamma(k1+n)/gamma(n+1)*coef_k1
coef_[1]<-coef_[1]-0.5
coef_
roots<-polyroot(coef_)
roots
root<-roots[(abs(Im(roots)) < 10^-6) & (Re(roots)>0)& (Re(roots)<1)]
length(root)
Re(root)
k1<- 10; k2 <- 20;
results<-func_Erlang_WMW(k1=k1, k2=k2)
lambda1 <- 1-results$r_root;
lambda2 <- results$r_root;
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*3,
k2/lambda2+sqrt(k2/(lambda2^2))*3)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2, "\n", "\n",
"mean: ", k1/lambda1, k2/lambda2, ", ratio:", k1/lambda1/(k2/lambda2), "\n",
"std: ", (sqrt(k1)/lambda1), (sqrt(k2)/lambda2), ", ratio:", (sqrt(k1)/lambda1)/(sqrt(k2)/lambda2), "\n",
"skw: ", 2/sqrt(k1), 2/sqrt(k2), ", ratio:", 2/sqrt(k1)/(2/sqrt(k2)), "\n",
"kur: ", 6/k1, (6/k2), ", ratio:", 6/k1/(6/k2), "\n",
"\n")
Nsim <- 100000
df_pval <-c(); df_pval2 <-c();
df_est <-c()
pb <- txtProgressBar(min = 1, max = Nsim, style = 3)
N<-1000
for(i in 1:Nsim){
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
#dfx <- rgamma(N, shape=k1, scale = theta1)
#dfy <- rgamma(N, shape=k2, scale = theta2)
#dfx <- rnorm(N, mean=-0.32, sd=0.55)
#dfy <- rnorm(N, mean=-0.05, sd=0.55)
#df_est <- c(df_est, pairwiseCI() )
df_pval2 <- c(df_pval2, brunner.munzel.test(x=dfx, y=dfy)$p.value)
df_pval <- c(df_pval, wilcox.test(x=dfx, y=dfy)$p.value)
setTxtProgressBar(pb, i)
}
dat_results <-rbind(
data.frame(value=df_pval, test="WMW"),
data.frame(value=df_pval2, test="BM")
)
dat_results %>%
ggplot(aes(x=value, fill=test, y = ..density..))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05)
)
N<-100000
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
mean(dfx<dfy)
k1<- 3; k2 <- 20;
results<-func_Erlang_WMW(k1=k1, k2=k2)
lambda1 <- 1-results$r_root;
lambda2 <- results$r_root;
#plot of density
xmax <- max(k1/lambda1+sqrt(k1/(lambda1^2))*3,
k2/lambda2+sqrt(k2/(lambda2^2))*3)
ggplot(data = data.frame(X=c(0, xmax)), aes(x=X)) +
stat_function(fun=function(x) dgamma(x, shape=k1, rate = lambda1), aes(color="X")) +
stat_function(fun=function(x) dgamma(x, shape=k2, rate = lambda2), aes(color="Y"))
cat(" k: ", k1, k2, "\n",
"lambda: ", lambda1, lambda2, "\n", "\n",
"mean: ", k1/lambda1, k2/lambda2, ", ratio:", k1/lambda1/(k2/lambda2), "\n",
"std: ", (sqrt(k1)/lambda1), (sqrt(k2)/lambda2), ", ratio:", (sqrt(k1)/lambda1)/(sqrt(k2)/lambda2), "\n",
"skw: ", 2/sqrt(k1), 2/sqrt(k2), ", ratio:", 2/sqrt(k1)/(2/sqrt(k2)), "\n",
"kur: ", 6/k1, (6/k2), ", ratio:", 6/k1/(6/k2), "\n",
"\n")
Nsim <- 100000
df_pval <-c(); df_pval2 <-c();
df_est <-c()
pb <- txtProgressBar(min = 1, max = Nsim, style = 3)
N<-1000
for(i in 1:Nsim){
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
#dfx <- rgamma(N, shape=k1, scale = theta1)
#dfy <- rgamma(N, shape=k2, scale = theta2)
#dfx <- rnorm(N, mean=-0.32, sd=0.55)
#dfy <- rnorm(N, mean=-0.05, sd=0.55)
#df_est <- c(df_est, pairwiseCI() )
df_pval2 <- c(df_pval2, brunner.munzel.test(x=dfx, y=dfy)$p.value)
df_pval <- c(df_pval, wilcox.test(x=dfx, y=dfy)$p.value)
setTxtProgressBar(pb, i)
}
dat_results <-rbind(
data.frame(value=df_pval, test="WMW"),
data.frame(value=df_pval2, test="BM")
)
dat_results %>%
ggplot(aes(x=value, fill=test, y = ..density..))+
geom_histogram(alpha=0.4, position="identity")
dat_results %>%
group_by(test) %>%
summarize(Nsim=n(), pval=mean(value), alpha=mean(value<0.05)
)
N<-100000
dfx <- rgamma(N, shape=k1, rate = lambda1)
dfy <- rgamma(N, shape=k2, rate = lambda2)
mean(dfx<dfy)
